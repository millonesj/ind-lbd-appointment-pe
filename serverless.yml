service: appointment-pe

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    AWS_REGION: us-east-1
    SQS_PE_URL:
      Ref: SQSPEQueue
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    DB_LOGGING: ${env:DB_LOGGING}
    DB_SYNCHRONIZE: ${env:DB_SYNCHRONIZE}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - Fn::GetAtt: [SQSPEQueue, Arn]
        - arn:aws:logs:us-east-1:*:*

functions:
  processAppointmentPE:
    handler: dist/serverless.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSPEQueue, Arn]
          batchSize: 10
          maximumBatchingWindow: 60

resources:
  Resources:
    SQSPEQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE
        VisibilityTimeout: 30
        MessageRetentionPeriod: 1209600
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt: [SQSPEDeadLetterQueue, Arn]
          maxReceiveCount: 5

    SQSPEDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE_DLQ
        MessageRetentionPeriod: 1209600
